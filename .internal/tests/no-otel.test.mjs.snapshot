exports[`no-otel > should put files 1`] = `
[
  "internal-tests-output-no-otel/.editorconfig",
  "internal-tests-output-no-otel/.env",
  "internal-tests-output-no-otel/.env.sample",
  "internal-tests-output-no-otel/.env.test",
  "internal-tests-output-no-otel/.git/HEAD",
  "internal-tests-output-no-otel/.git/config",
  "internal-tests-output-no-otel/.git/description",
  "internal-tests-output-no-otel/.git/hooks/applypatch-msg.sample",
  "internal-tests-output-no-otel/.git/hooks/commit-msg.sample",
  "internal-tests-output-no-otel/.git/hooks/fsmonitor-watchman.sample",
  "internal-tests-output-no-otel/.git/hooks/post-update.sample",
  "internal-tests-output-no-otel/.git/hooks/pre-applypatch.sample",
  "internal-tests-output-no-otel/.git/hooks/pre-commit",
  "internal-tests-output-no-otel/.git/hooks/pre-commit.sample",
  "internal-tests-output-no-otel/.git/hooks/pre-merge-commit.sample",
  "internal-tests-output-no-otel/.git/hooks/pre-push.sample",
  "internal-tests-output-no-otel/.git/hooks/pre-rebase.sample",
  "internal-tests-output-no-otel/.git/hooks/pre-receive.sample",
  "internal-tests-output-no-otel/.git/hooks/prepare-commit-msg",
  "internal-tests-output-no-otel/.git/hooks/prepare-commit-msg.sample",
  "internal-tests-output-no-otel/.git/hooks/push-to-checkout.sample",
  "internal-tests-output-no-otel/.git/hooks/update.sample",
  "internal-tests-output-no-otel/.git/info/exclude",
  "internal-tests-output-no-otel/.git/info/lefthook.checksum",
  "internal-tests-output-no-otel/.github/actions/setup-db/action.yml",
  "internal-tests-output-no-otel/.github/actions/setup-node/action.yml",
  "internal-tests-output-no-otel/.github/copilot-instructions.md",
  "internal-tests-output-no-otel/.github/workflows/ci.yml",
  "internal-tests-output-no-otel/.github/workflows/migration.yml",
  "internal-tests-output-no-otel/.gitignore",
  "internal-tests-output-no-otel/.node-version",
  "internal-tests-output-no-otel/.npmrc",
  "internal-tests-output-no-otel/.vscode/extensions.json",
  "internal-tests-output-no-otel/.vscode/settings.json",
  "internal-tests-output-no-otel/Dockerfile",
  "internal-tests-output-no-otel/README.md",
  "internal-tests-output-no-otel/biome.json",
  "internal-tests-output-no-otel/compose.yml",
  "internal-tests-output-no-otel/env.ts",
  "internal-tests-output-no-otel/knip.config.ts",
  "internal-tests-output-no-otel/lefthook.yml",
  "internal-tests-output-no-otel/next.config.ts",
  "internal-tests-output-no-otel/package.json",
  "internal-tests-output-no-otel/playwright.config.ts",
  "internal-tests-output-no-otel/pnpm-lock.yaml",
  "internal-tests-output-no-otel/postcss.config.mjs",
  "internal-tests-output-no-otel/prisma/ERD.md",
  "internal-tests-output-no-otel/prisma/migrations/migration_lock.toml",
  "internal-tests-output-no-otel/prisma/schema.prisma",
  "internal-tests-output-no-otel/public/.gitkeep",
  "internal-tests-output-no-otel/renovate.json",
  "internal-tests-output-no-otel/tests/db.setup.ts",
  "internal-tests-output-no-otel/tests/vitest.setup.ts",
  "internal-tests-output-no-otel/tsconfig.json",
  "internal-tests-output-no-otel/vitest.config.ts",
  "mocked/migration.sql"
]
`;

exports[`no-otel > should update README.md 1`] = `
[
  "## Setup",
  "",
  "\`\`\`sh",
  "# enable corepack",
  "$ npm run setup",
  "# install deps",
  "$ pnpm i",
  "# create \\".env\\" and modifying environment variables",
  "$ cp .env.sample .env",
  "\`\`\`",
  "",
  "## Development",
  "",
  "\`\`\`sh",
  "$ pnpm dev",
  "\`\`\`",
  "",
  "## Production",
  "",
  "\`\`\`sh",
  "$ pnpm db:up",
  "$ pnpm build",
  "$ pnpm start",
  "\`\`\`",
  "",
  "## Test",
  "",
  "### Unit Test",
  "",
  "\`\`\`sh",
  "$ pnpm test",
  "$ pnpm test:watch",
  "\`\`\`",
  "",
  "### E2E Test",
  "",
  "A build task must be executed before running tests to bypass JWT logic.",
  "",
  "\`\`\`sh",
  "# install chrome",
  "$ pnpm exec playwright install chrome",
  "# build using test environments since it needs to change encode/decode functions of next-auth",
  "$ pnpm build:test",
  "",
  "$ pnpm test:e2e",
  "$ pnpm test:e2e:ui",
  "\`\`\`",
  "",
  "## Database",
  "",
  "\`\`\`sh",
  "$ pnpm db:migrate",
  "$ pnpm db:reset",
  "# view the database items",
  "$ pnpm db:studio",
  "\`\`\`",
  "",
  "## Links",
  "",
  "- [Database ER diagram](/prisma/ERD.md)",
  "- [Web App Template](https://hiroppy.github.io/web-app-template/)",
  ""
]
`;

exports[`no-otel > should update compose.yml 1`] = `
[
  "volumes:",
  "  db-data:",
  "",
  "services:",
  "  db:",
  "    image: postgres:17",
  "    ports:",
  "      - \${DATABASE_PORT:-5432}:5432",
  "    environment:",
  "      - POSTGRES_USER=\${DATABASE_USER}",
  "      - POSTGRES_PASSWORD=\${DATABASE_PASSWORD}",
  "      - POSTGRES_DB=\${DATABASE_DB}",
  ""
]
`;

exports[`no-otel > should update dependencies 1`] = `
{
  "dependencies": [
    "@auth/prisma-adapter",
    "@hookform/resolvers",
    "@prisma/client",
    "clsx",
    "next",
    "next-auth",
    "react",
    "react-dom",
    "react-hook-form",
    "zod"
  ],
  "devDependencies": [
    "@biomejs/biome",
    "@next/env",
    "@playwright/test",
    "@tailwindcss/postcss",
    "@testing-library/react",
    "@types/node",
    "@types/react",
    "@types/react-dom",
    "@vitejs/plugin-react",
    "jsdom",
    "knip",
    "lefthook",
    "postcss",
    "prettier",
    "prisma",
    "prisma-erd-generator",
    "tailwindcss",
    "testcontainers",
    "typescript",
    "vitest"
  ]
}
`;

exports[`no-otel > should update next.config.ts 1`] = `
[
  "import type { NextConfig } from \\"next\\";",
  "import { config } from \\"./env\\";",
  "",
  "config();",
  "",
  "const nextConfig: NextConfig = {",
  "  async headers() {",
  "    return [",
  "      {",
  "        source: \\"/(.*?)\\",",
  "        headers: [",
  "          {",
  "            key: \\"X-Frame-Options\\",",
  "            value: \\"DENY\\",",
  "          },",
  "          {",
  "            key: \\"X-DNS-Prefetch-Control\\",",
  "            value: \\"on\\",",
  "          },",
  "          {",
  "            key: \\"X-XSS-Protection\\",",
  "            value: \\"1; mode=block\\",",
  "          },",
  "          {",
  "            key: \\"X-Content-Type-Options\\",",
  "            value: \\"nosniff\\",",
  "          },",
  "          {",
  "            key: \\"Referrer-Policy\\",",
  "            value: \\"origin-when-cross-origin\\",",
  "          },",
  "        ],",
  "      },",
  "    ];",
  "  },",
  "  images: {",
  "    remotePatterns: [",
  "      {",
  "        protocol: \\"https\\",",
  "        hostname: \\"lh3.googleusercontent.com\\",",
  "      },",
  "    ],",
  "  },",
  "  experimental: {",
  "    typedRoutes: true,",
  "    authInterrupts: true,",
  "  },",
  "};",
  "",
  "export default nextConfig;",
  ""
]
`;
