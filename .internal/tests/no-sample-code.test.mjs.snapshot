exports[`no-sample-code > should put files 1`] = `
[
  "internal-tests-output-no-sample-code/.editorconfig",
  "internal-tests-output-no-sample-code/.env",
  "internal-tests-output-no-sample-code/.env.sample",
  "internal-tests-output-no-sample-code/.env.test",
  "internal-tests-output-no-sample-code/.git/HEAD",
  "internal-tests-output-no-sample-code/.git/config",
  "internal-tests-output-no-sample-code/.git/description",
  "internal-tests-output-no-sample-code/.git/hooks/applypatch-msg.sample",
  "internal-tests-output-no-sample-code/.git/hooks/commit-msg.sample",
  "internal-tests-output-no-sample-code/.git/hooks/fsmonitor-watchman.sample",
  "internal-tests-output-no-sample-code/.git/hooks/post-update.sample",
  "internal-tests-output-no-sample-code/.git/hooks/pre-applypatch.sample",
  "internal-tests-output-no-sample-code/.git/hooks/pre-commit.sample",
  "internal-tests-output-no-sample-code/.git/hooks/pre-merge-commit.sample",
  "internal-tests-output-no-sample-code/.git/hooks/pre-push.sample",
  "internal-tests-output-no-sample-code/.git/hooks/pre-rebase.sample",
  "internal-tests-output-no-sample-code/.git/hooks/pre-receive.sample",
  "internal-tests-output-no-sample-code/.git/hooks/prepare-commit-msg.sample",
  "internal-tests-output-no-sample-code/.git/hooks/push-to-checkout.sample",
  "internal-tests-output-no-sample-code/.git/hooks/update.sample",
  "internal-tests-output-no-sample-code/.git/info/exclude",
  "internal-tests-output-no-sample-code/.github/actions/setup-db/action.yml",
  "internal-tests-output-no-sample-code/.github/actions/setup-node/action.yml",
  "internal-tests-output-no-sample-code/.github/copilot-instructions.md",
  "internal-tests-output-no-sample-code/.github/workflows/ci.yml",
  "internal-tests-output-no-sample-code/.github/workflows/migration.yml",
  "internal-tests-output-no-sample-code/.gitignore",
  "internal-tests-output-no-sample-code/.internal/.gitignore",
  "internal-tests-output-no-sample-code/.internal/README.md",
  "internal-tests-output-no-sample-code/.internal/create-app-foundation/README.md",
  "internal-tests-output-no-sample-code/.internal/create-app-foundation/package.json",
  "internal-tests-output-no-sample-code/.internal/create-app-foundation/pnpm-lock.yaml",
  "internal-tests-output-no-sample-code/.internal/create-app-foundation/src/git.mjs",
  "internal-tests-output-no-sample-code/.internal/create-app-foundation/src/index.mjs",
  "internal-tests-output-no-sample-code/.internal/setup/code/app-(public)-page.tsx",
  "internal-tests-output-no-sample-code/.internal/setup/code/app-layout.tsx",
  "internal-tests-output-no-sample-code/.internal/setup/common-processing.mjs",
  "internal-tests-output-no-sample-code/.internal/setup/db.mjs",
  "internal-tests-output-no-sample-code/.internal/setup/format.mjs",
  "internal-tests-output-no-sample-code/.internal/setup/init.mjs",
  "internal-tests-output-no-sample-code/.internal/setup/package-json.mjs",
  "internal-tests-output-no-sample-code/.internal/setup/questions/docker.mjs",
  "internal-tests-output-no-sample-code/.internal/setup/questions/e2e.mjs",
  "internal-tests-output-no-sample-code/.internal/setup/questions/index.mjs",
  "internal-tests-output-no-sample-code/.internal/setup/questions/otel.mjs",
  "internal-tests-output-no-sample-code/.internal/setup/questions/sample-code.mjs",
  "internal-tests-output-no-sample-code/.internal/setup/utils.mjs",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/cache/deps/@theme_index.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/cache/deps/@theme_index.js.map",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/cache/deps/_metadata.json",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/cache/deps/chunk-5OYVI2TY.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/cache/deps/chunk-5OYVI2TY.js.map",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/cache/deps/chunk-CQOUZRMK.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/cache/deps/chunk-CQOUZRMK.js.map",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/cache/deps/package.json",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/cache/deps/vitepress___@vue_devtools-api.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/cache/deps/vitepress___@vue_devtools-api.js.map",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/cache/deps/vitepress___@vueuse_core.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/cache/deps/vitepress___@vueuse_core.js.map",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/cache/deps/vue.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/cache/deps/vue.js.map",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/config.mts",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/404.html",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/app.BZlZU4Qp.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/chunks/docker.BG773L8L.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/chunks/framework.P9qPzDnn.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/chunks/next-auth.D8dyw42M.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/chunks/nextjs.YXzZzXcq.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/chunks/otel.29JQ0aHQ.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/chunks/playwright.DZ_xk9Uj.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/chunks/prisma.Dxle-em_.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/chunks/testcontainers.d5EdFJdZ.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/chunks/testing-library.DfqiJu8-.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/chunks/theme.CrUO_k8X.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/chunks/zod.C12Pnpn6.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/features_ai.md.BR-31GLn.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/features_ai.md.BR-31GLn.lean.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/features_e2e-testing.md.Bcax1-96.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/features_e2e-testing.md.Bcax1-96.lean.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/features_git.md.GwdcPz1e.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/features_git.md.GwdcPz1e.lean.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/features_next-auth.md.D91BAtqh.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/features_next-auth.md.D91BAtqh.lean.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/features_nextjs.md.CiFF1U6n.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/features_nextjs.md.CiFF1U6n.lean.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/features_observability.md.cufO1RzN.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/features_observability.md.cufO1RzN.lean.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/features_prisma.md.C-Sen9Hx.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/features_prisma.md.C-Sen9Hx.lean.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/features_unit-testing.md.DwtZAEZ7.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/features_unit-testing.md.DwtZAEZ7.lean.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/index.md.Cner43_D.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/index.md.Cner43_D.lean.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/inter-italic-cyrillic-ext.r48I6akx.woff2",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/inter-italic-cyrillic.By2_1cv3.woff2",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/inter-italic-greek-ext.1u6EdAuj.woff2",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/inter-italic-greek.DJ8dCoTZ.woff2",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/inter-italic-latin-ext.CN1xVJS-.woff2",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/inter-italic-latin.C2AdPX0b.woff2",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/inter-italic-vietnamese.BSbpV94h.woff2",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/inter-roman-cyrillic-ext.BBPuwvHQ.woff2",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/inter-roman-cyrillic.C5lxZ8CY.woff2",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/inter-roman-greek-ext.CqjqNYQ-.woff2",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/inter-roman-greek.BBVDIX6e.woff2",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/inter-roman-latin-ext.4ZJIpNVo.woff2",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/inter-roman-latin.Di8DUHzh.woff2",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/inter-roman-vietnamese.BjW4sHH5.woff2",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/introduction_challenges-solved.md.DlRNsA2b.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/introduction_challenges-solved.md.DlRNsA2b.lean.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/introduction_getting-started.md.DpjxUv2p.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/introduction_getting-started.md.DpjxUv2p.lean.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/introduction_what-is-web-app-template.md.Cz6dJhNz.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/introduction_what-is-web-app-template.md.Cz6dJhNz.lean.js",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/assets/style.CLB91A0I.css",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/features/ai.html",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/features/e2e-testing.html",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/features/git.html",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/features/next-auth.html",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/features/nextjs.html",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/features/observability.html",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/features/prisma.html",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/features/unit-testing.html",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/hashmap.json",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/icon.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/biome.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/docker.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/github-actions.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/images.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/lint-staged.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/next-auth.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/nextjs.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/otel.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/playwright.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/pnpm.svg",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/prettier.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/prisma.svg",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/react-hook-form.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/renovate.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/tailwind.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/testcontainers.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/testing-library.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/typescript.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/vitest.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/vscode.png",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/images/libs/zod.svg",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/index.html",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/introduction/challenges-solved.html",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/introduction/getting-started.html",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/introduction/what-is-web-app-template.html",
  "internal-tests-output-no-sample-code/.internal/site/.vitepress/dist/vp-icons.css",
  "internal-tests-output-no-sample-code/.internal/site/package.json",
  "internal-tests-output-no-sample-code/.internal/site/pnpm-lock.yaml",
  "internal-tests-output-no-sample-code/.internal/site/src/features/code-quality-automation.md",
  "internal-tests-output-no-sample-code/.internal/site/src/features/copilot.md",
  "internal-tests-output-no-sample-code/.internal/site/src/features/e2e-testing.md",
  "internal-tests-output-no-sample-code/.internal/site/src/features/next-auth.md",
  "internal-tests-output-no-sample-code/.internal/site/src/features/nextjs.md",
  "internal-tests-output-no-sample-code/.internal/site/src/features/observability.md",
  "internal-tests-output-no-sample-code/.internal/site/src/features/prisma.md",
  "internal-tests-output-no-sample-code/.internal/site/src/features/unit-testing.md",
  "internal-tests-output-no-sample-code/.internal/site/src/index.md",
  "internal-tests-output-no-sample-code/.internal/site/src/introduction/challenges-solved.md",
  "internal-tests-output-no-sample-code/.internal/site/src/introduction/dotenv.md",
  "internal-tests-output-no-sample-code/.internal/site/src/introduction/getting-started.md",
  "internal-tests-output-no-sample-code/.internal/site/src/introduction/routing.md",
  "internal-tests-output-no-sample-code/.internal/site/src/introduction/tasks.md",
  "internal-tests-output-no-sample-code/.internal/site/src/introduction/what-is-web-app-template.md",
  "internal-tests-output-no-sample-code/.internal/site/src/public/favicon.ico",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/icon.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/biome.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/copilot.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/docker.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/editorconfig.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/github-actions.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/lefthook.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/next-auth.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/nextjs.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/otel.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/playwright.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/pnpm.svg",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/postgresql.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/prettier.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/prisma.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/react-hook-form.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/renovate.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/tailwind.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/testcontainers.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/testing-library.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/typescript.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/vitest.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/vscode.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/libs/zod.svg",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/otel/query.png",
  "internal-tests-output-no-sample-code/.internal/site/src/public/images/otel/root-metric.png",
  "internal-tests-output-no-sample-code/.internal/tests/Basetest.mjs",
  "internal-tests-output-no-sample-code/.internal/tests/all-opt-out.test.mjs",
  "internal-tests-output-no-sample-code/.internal/tests/common.test.mjs",
  "internal-tests-output-no-sample-code/.internal/tests/common.test.mjs.snapshot",
  "internal-tests-output-no-sample-code/.internal/tests/makefile",
  "internal-tests-output-no-sample-code/.internal/tests/no-docker.test.mjs",
  "internal-tests-output-no-sample-code/.internal/tests/no-docker.test.mjs.snapshot",
  "internal-tests-output-no-sample-code/.internal/tests/no-e2e.test.mjs",
  "internal-tests-output-no-sample-code/.internal/tests/no-e2e.test.mjs.snapshot",
  "internal-tests-output-no-sample-code/.internal/tests/no-otel.test.mjs",
  "internal-tests-output-no-sample-code/.internal/tests/no-otel.test.mjs.snapshot",
  "internal-tests-output-no-sample-code/.internal/tests/no-sample-code.test.mjs",
  "internal-tests-output-no-sample-code/.internal/tests/no-sample-code.test.mjs.snapshot",
  "internal-tests-output-no-sample-code/.node-version",
  "internal-tests-output-no-sample-code/.npmrc",
  "internal-tests-output-no-sample-code/.vscode/extensions.json",
  "internal-tests-output-no-sample-code/.vscode/settings.json",
  "internal-tests-output-no-sample-code/Dockerfile",
  "internal-tests-output-no-sample-code/README.md",
  "internal-tests-output-no-sample-code/biome.json",
  "internal-tests-output-no-sample-code/compose.yml",
  "internal-tests-output-no-sample-code/e2e/dummyUsers.ts",
  "internal-tests-output-no-sample-code/e2e/fixtures.ts",
  "internal-tests-output-no-sample-code/e2e/globalSetup.ts",
  "internal-tests-output-no-sample-code/e2e/globalTeardown.ts",
  "internal-tests-output-no-sample-code/e2e/globals.d.ts",
  "internal-tests-output-no-sample-code/e2e/helpers/prisma.ts",
  "internal-tests-output-no-sample-code/e2e/helpers/users.ts",
  "internal-tests-output-no-sample-code/e2e/integrations/auth.test.ts",
  "internal-tests-output-no-sample-code/e2e/integrations/item.test.ts",
  "internal-tests-output-no-sample-code/e2e/integrations/user.test.ts",
  "internal-tests-output-no-sample-code/e2e/models/Base.ts",
  "internal-tests-output-no-sample-code/e2e/models/MePage.ts",
  "internal-tests-output-no-sample-code/e2e/models/NotFoundPage.ts",
  "internal-tests-output-no-sample-code/e2e/models/SignInPage.ts",
  "internal-tests-output-no-sample-code/e2e/models/TopPage.ts",
  "internal-tests-output-no-sample-code/e2e/setup/auth.ts",
  "internal-tests-output-no-sample-code/env.ts",
  "internal-tests-output-no-sample-code/knip.config.ts",
  "internal-tests-output-no-sample-code/lefthook.yml",
  "internal-tests-output-no-sample-code/next.config.ts",
  "internal-tests-output-no-sample-code/otel-collector-config.yml",
  "internal-tests-output-no-sample-code/package.json",
  "internal-tests-output-no-sample-code/playwright.config.ts",
  "internal-tests-output-no-sample-code/pnpm-lock.yaml",
  "internal-tests-output-no-sample-code/postcss.config.mjs",
  "internal-tests-output-no-sample-code/prisma/ERD.md",
  "internal-tests-output-no-sample-code/prisma/schema.prisma",
  "internal-tests-output-no-sample-code/public/.gitkeep",
  "internal-tests-output-no-sample-code/renovate.json",
  "internal-tests-output-no-sample-code/src/app/(private)/layout.tsx",
  "internal-tests-output-no-sample-code/src/app/(private)/me/_components/UpdateMyInfo.tsx",
  "internal-tests-output-no-sample-code/src/app/(private)/me/page.tsx",
  "internal-tests-output-no-sample-code/src/app/(public)/layout.tsx",
  "internal-tests-output-no-sample-code/src/app/(public)/page.tsx",
  "internal-tests-output-no-sample-code/src/app/(public)/signin/page.tsx",
  "internal-tests-output-no-sample-code/src/app/@dialog/(.)create/Content.tsx",
  "internal-tests-output-no-sample-code/src/app/@dialog/(.)create/default.tsx",
  "internal-tests-output-no-sample-code/src/app/@dialog/(.)create/page.tsx",
  "internal-tests-output-no-sample-code/src/app/@dialog/_components/Dialog.tsx",
  "internal-tests-output-no-sample-code/src/app/@dialog/default.tsx",
  "internal-tests-output-no-sample-code/src/app/@dialog/page.tsx",
  "internal-tests-output-no-sample-code/src/app/_actions/items.test.ts",
  "internal-tests-output-no-sample-code/src/app/_actions/items.ts",
  "internal-tests-output-no-sample-code/src/app/_actions/test.helper.ts",
  "internal-tests-output-no-sample-code/src/app/_actions/types.ts",
  "internal-tests-output-no-sample-code/src/app/_actions/users.test.ts",
  "internal-tests-output-no-sample-code/src/app/_actions/users.ts",
  "internal-tests-output-no-sample-code/src/app/_clients/nextAuth.ts",
  "internal-tests-output-no-sample-code/src/app/_clients/nextAuthConfig.ts",
  "internal-tests-output-no-sample-code/src/app/_clients/prisma.ts",
  "internal-tests-output-no-sample-code/src/app/_components/Button.tsx",
  "internal-tests-output-no-sample-code/src/app/_components/Container.tsx",
  "internal-tests-output-no-sample-code/src/app/_components/ErrorPageTemplate.tsx",
  "internal-tests-output-no-sample-code/src/app/_components/Footer.tsx",
  "internal-tests-output-no-sample-code/src/app/_components/Header.tsx",
  "internal-tests-output-no-sample-code/src/app/_components/SignInButton.tsx",
  "internal-tests-output-no-sample-code/src/app/_components/SignOutButton.tsx",
  "internal-tests-output-no-sample-code/src/app/_hooks/useOnlineStatus.test.ts",
  "internal-tests-output-no-sample-code/src/app/_hooks/useOnlineStatus.ts",
  "internal-tests-output-no-sample-code/src/app/_schemas/items.test.ts",
  "internal-tests-output-no-sample-code/src/app/_schemas/items.ts",
  "internal-tests-output-no-sample-code/src/app/_schemas/users.test.ts",
  "internal-tests-output-no-sample-code/src/app/_schemas/users.ts",
  "internal-tests-output-no-sample-code/src/app/_utils/date.test.ts",
  "internal-tests-output-no-sample-code/src/app/_utils/date.ts",
  "internal-tests-output-no-sample-code/src/app/_utils/db.test.ts",
  "internal-tests-output-no-sample-code/src/app/_utils/db.ts",
  "internal-tests-output-no-sample-code/src/app/_utils/zod.test.ts",
  "internal-tests-output-no-sample-code/src/app/_utils/zod.ts",
  "internal-tests-output-no-sample-code/src/app/api/auth/[...nextauth]/route.ts",
  "internal-tests-output-no-sample-code/src/app/api/health/route.ts",
  "internal-tests-output-no-sample-code/src/app/error.tsx",
  "internal-tests-output-no-sample-code/src/app/favicon.ico",
  "internal-tests-output-no-sample-code/src/app/global-error.tsx",
  "internal-tests-output-no-sample-code/src/app/globals.css",
  "internal-tests-output-no-sample-code/src/app/globals.d.ts",
  "internal-tests-output-no-sample-code/src/app/layout.tsx",
  "internal-tests-output-no-sample-code/src/app/not-found.tsx",
  "internal-tests-output-no-sample-code/src/app/opengraph-image.tsx",
  "internal-tests-output-no-sample-code/src/app/robots.txt",
  "internal-tests-output-no-sample-code/src/instrumentation.ts",
  "internal-tests-output-no-sample-code/src/middleware.test.ts",
  "internal-tests-output-no-sample-code/src/middleware.ts",
  "internal-tests-output-no-sample-code/src/otel/node.ts",
  "internal-tests-output-no-sample-code/tests/db.setup.ts",
  "internal-tests-output-no-sample-code/tests/vitest.setup.ts",
  "internal-tests-output-no-sample-code/tsconfig.json",
  "internal-tests-output-no-sample-code/vitest.config.ts"
]
`;

exports[`no-sample-code > should update e2e/fixtures.ts 1`] = `
[
  "import { test as base } from \\"@playwright/test\\";",
  "import type { User } from \\"next-auth\\";",
  "import { truncate } from \\"../tests/db.setup\\";",
  "import { generatePrismaClient } from \\"./helpers/prisma\\";",
  "import { registerUserToDB } from \\"./helpers/users\\";",
  "import { MePage } from \\"./models/MePage\\";",
  "import { NotFoundPage } from \\"./models/NotFoundPage\\";",
  "import { SignInPage } from \\"./models/SignInPage\\";",
  "import { TopPage } from \\"./models/TopPage\\";",
  "",
  "export type TestFixtures = {",
  "  topPage: TopPage;",
  "  mePage: MePage;",
  "  signInPage: SignInPage;",
  "  notFoundPage: NotFoundPage;",
  "  storageState: string;",
  "  registerToDB: (user: User) => Promise<void>;",
  "  reset: () => Promise<void>;",
  "};",
  "",
  "// biome-ignore lint: lint/complexity/noBannedTypes",
  "export type WorkerFixtures = {};",
  "",
  "export const test = base.extend<TestFixtures, WorkerFixtures>({",
  "  topPage: ({ page }, use) => {",
  "    use(new TopPage(page));",
  "  },",
  "  mePage: ({ page }, use) => {",
  "    use(new MePage(page));",
  "  },",
  "  signInPage: ({ page }, use) => {",
  "    use(new SignInPage(page));",
  "  },",
  "  notFoundPage: ({ page }, use) => {",
  "    use(new NotFoundPage(page));",
  "  },",
  "  registerToDB: async ({ page, reset }, use) => {",
  "    await use(async (user: User) => {",
  "      await registerUserToDB(user);",
  "    });",
  "    await reset();",
  "  },",
  "  reset: ({ context }, use) => {",
  "    use(async () => {",
  "      await using db = await generatePrismaClient();",
  "      await Promise.all([truncate(db.prisma), context.clearCookies()]);",
  "    });",
  "  },",
  "});",
  ""
]
`;

exports[`no-sample-code > should update e2e/models/TopPage.ts 1`] = `
[
  "import { type Locator, type Page, expect } from \\"@playwright/test\\";",
  "import type { User } from \\"next-auth\\";",
  "import { Base } from \\"./Base\\";",
  "",
  "export class TopPage extends Base {",
  "  textUserStatusLabelLocator: Locator;",
  "  /* start: sample */",
  "  buttonAddItemLocator: Locator;",
  "  buttonDeleteItemsLocator: Locator;",
  "  /* end: sample */",
  "",
  "  constructor(page: Page) {",
  "    super(page);",
  "",
  "    this.textUserStatusLabelLocator = this.page.locator(",
  "      '[aria-label=\\"User status\\"]',",
  "    );",
  "    /* start: sample */",
  "    this.buttonAddItemLocator = this.page.getByRole(\\"link\\", {",
  "      name: \\"Add an item\\",",
  "    });",
  "    this.buttonDeleteItemsLocator = this.page.getByRole(\\"button\\", {",
  "      name: \\"Delete my items\\",",
  "    });",
  "    /* end: sample */",
  "  }",
  "",
  "  async goTo() {",
  "    return await this.page.goto(\\"/\\");",
  "  }",
  "",
  "  async expectUI(state: \\"signIn\\" | \\"signOut\\", user?: User) {",
  "    if (state === \\"signIn\\") {",
  "      await expect(this.textUserStatusLabelLocator).toContainText(",
  "        \`you are signed in as \${user?.name} 😄\`,",
  "      );",
  "      /* start: sample */",
  "      await expect(this.buttonDeleteItemsLocator).toBeVisible();",
  "      await expect(this.buttonAddItemLocator).toBeVisible();",
  "      /* end: sample */",
  "    }",
  "",
  "    if (state === \\"signOut\\") {",
  "      await expect(this.textUserStatusLabelLocator).toContainText(",
  "        \\"you are not signed in 🥲\\",",
  "      );",
  "      /* start: sample */",
  "      await expect(this.buttonDeleteItemsLocator).not.toBeVisible();",
  "      await expect(this.buttonAddItemLocator).not.toBeVisible();",
  "      /* end: sample */",
  "    }",
  "  }",
  "",
  "  /* start: sample */",
  "  async getItems() {",
  "    const items = await this.page",
  "      .getByRole(\\"list\\", { name: \\"items\\" })",
  "      .getByRole(\\"listitem\\")",
  "      .all();",
  "    const res = await Promise.all(",
  "      items.map(async (item) => {",
  "        const img = await item.getByRole(\\"img\\").getAttribute(\\"src\\");",
  "        const title = await item.getByRole(\\"heading\\").innerText();",
  "",
  "        return {",
  "          img,",
  "          title,",
  "        };",
  "      }),",
  "    );",
  "",
  "    return res;",
  "  }",
  "",
  "  async addItem(content: string) {",
  "    expect(await this.buttonAddItemLocator.getAttribute(\\"href\\")).toBe(",
  "      \\"/create\\",",
  "    );",
  "",
  "    await this.buttonAddItemLocator.click();",
  "    await this.page.fill(\\"#content\\", content);",
  "    await this.page.keyboard.press(\\"Enter\\");",
  "    await this.page.waitForLoadState(\\"networkidle\\");",
  "    await this.page.goto(\\"/\\");",
  "  }",
  "",
  "  async deleteAllItems() {",
  "    await this.buttonDeleteItemsLocator.click();",
  "    await this.page.waitForLoadState(\\"networkidle\\");",
  "  }",
  "",
  "  async expectItems(",
  "    expected: {",
  "      img: string;",
  "      title: string;",
  "    }[],",
  "  ) {",
  "    expect(await this.getItems()).toMatchObject(expected);",
  "  }",
  "  /* end: sample */",
  "}",
  ""
]
`;

exports[`no-sample-code > should update next.config.ts 1`] = `
[
  "import type { NextConfig } from \\"next\\";",
  "import { config } from \\"./env\\";",
  "",
  "config();",
  "",
  "const nextConfig: NextConfig = {",
  "  async headers() {",
  "    return [",
  "      {",
  "        source: \\"/(.*?)\\",",
  "        headers: [",
  "          {",
  "            key: \\"X-Frame-Options\\",",
  "            value: \\"DENY\\",",
  "          },",
  "          {",
  "            key: \\"X-DNS-Prefetch-Control\\",",
  "            value: \\"on\\",",
  "          },",
  "          {",
  "            key: \\"X-XSS-Protection\\",",
  "            value: \\"1; mode=block\\",",
  "          },",
  "          {",
  "            key: \\"X-Content-Type-Options\\",",
  "            value: \\"nosniff\\",",
  "          },",
  "          {",
  "            key: \\"Referrer-Policy\\",",
  "            value: \\"origin-when-cross-origin\\",",
  "          },",
  "        ],",
  "      },",
  "    ];",
  "  },",
  "  /* start: sample */",
  "  images: {",
  "    remotePatterns: [",
  "      {",
  "        protocol: \\"https\\",",
  "        hostname: \\"lh3.googleusercontent.com\\",",
  "      },",
  "    ],",
  "  },",
  "  /* end: sample */",
  "  experimental: {",
  "    typedRoutes: true,",
  "    authInterrupts: true,",
  "  },",
  "  /* start: otel */",
  "  webpack: (config, { isServer }) => {",
  "    if (isServer) {",
  "      // https://github.com/open-telemetry/opentelemetry-js/issues/4173",
  "      config.ignoreWarnings = [{ module: /opentelemetry/ }];",
  "    }",
  "    return config;",
  "  },",
  "  /* end: otel */",
  "};",
  "",
  "export default nextConfig;",
  ""
]
`;

exports[`no-sample-code > should update prisma/schema.prisma 1`] = `
[
  "// https://pris.ly/d/prisma-schema",
  "",
  "datasource db {",
  "  provider = \\"postgresql\\"",
  "  url      = env(\\"DATABASE_URL\\")",
  "}",
  "",
  "generator client {",
  "  provider        = \\"prisma-client-js\\"",
  "  previewFeatures = [\\"fullTextSearchPostgres\\"]",
  "}",
  "",
  "generator erd {",
  "  provider                  = \\"prisma-erd-generator\\"",
  "  theme                     = \\"forest\\"",
  "  output                    = \\"ERD.md\\"",
  "  includeRelationFromFields = true",
  "}",
  "",
  "// https://authjs.dev/getting-started/adapters/prisma#schema",
  "model Account {",
  "  id                String   @id @default(cuid())",
  "  userId            String   @map(\\"user_id\\")",
  "  type              String",
  "  provider          String",
  "  providerAccountId String   @map(\\"provider_account_id\\")",
  "  refresh_token     String?  @db.Text",
  "  access_token      String?  @db.Text",
  "  expires_at        Int?",
  "  token_type        String?",
  "  scope             String?",
  "  id_token          String?  @db.Text",
  "  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)",
  "  createdAt         DateTime @default(now()) @map(\\"created_at\\")",
  "  updatedAt         DateTime @updatedAt @map(\\"updated_at\\")",
  "",
  "  @@unique([provider, providerAccountId])",
  "  @@map(\\"accounts\\")",
  "}",
  "",
  "model User {",
  "  id            String    @id @default(cuid())",
  "  name          String?",
  "  email         String?   @unique",
  "  emailVerified DateTime? @map(\\"email_verified\\")",
  "  image         String?",
  "  accounts      Account[]",
  "  createdAt     DateTime  @default(now()) @map(\\"created_at\\")",
  "  updatedAt     DateTime  @updatedAt @map(\\"updated_at\\")",
  "  // https://authjs.dev/guides/basics/role-based-access-control",
  "  role          Role      @default(USER)",
  "  items         Item[]",
  "",
  "  @@map(\\"users\\")",
  "}",
  "",
  "model Item {",
  "  id        String   @id @default(cuid())",
  "  content   String",
  "  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)",
  "  userId    String   @map(\\"user_id\\")",
  "  createdAt DateTime @default(now()) @map(\\"created_at\\")",
  "  updatedAt DateTime @updatedAt @map(\\"updated_at\\")",
  "",
  "  @@map(\\"items\\")",
  "}",
  "",
  "enum Role {",
  "  USER",
  "  ADMIN",
  "}",
  ""
]
`;

exports[`no-sample-code > should update src/app/(public)/page.tsx 1`] = `
[
  "import type { Route } from \\"next\\";",
  "import Image from \\"next/image\\";",
  "import Link from \\"next/link\\";",
  "import { Suspense } from \\"react\\";",
  "import { deleteAll } from \\"../_actions/items\\";",
  "import { auth } from \\"../_clients/nextAuth\\";",
  "import { prisma } from \\"../_clients/prisma\\";",
  "import { Button } from \\"../_components/Button\\";",
  "import { format } from \\"../_utils/date\\";",
  "",
  "export default async function Page() {",
  "  return (",
  "    <div className=\\"space-y-5\\">",
  "      <Suspense fallback={<p>loading ...</p>}>",
  "        <Status />",
  "      </Suspense>",
  "      <Suspense fallback={<p>loading ...</p>}>",
  "        <List />",
  "      </Suspense>",
  "    </div>",
  "  );",
  "}",
  "",
  "async function Status() {",
  "  const session = await auth();",
  "",
  "  return (",
  "    <div className=\\"flex justify-between gap-3 flex-col md:flex-row md:items-center\\">",
  "      <p className=\\"text-gray-300\\" aria-label=\\"User status\\">",
  "        {session?.user",
  "          ? \`you are signed in as \${session.user.name} 😄\`",
  "          : \\"you are not signed in 🥲\\"}",
  "      </p>",
  "      {session?.user && (",
  "        <div className=\\"flex items-center gap-4\\">",
  "          <Link href={\\"/create\\" as Route} scroll={false}>",
  "            <Button className=\\"bg-blue-600\\">Add an item</Button>",
  "          </Link>",
  "          <form action={deleteAll}>",
  "            <Button type=\\"submit\\" className=\\"bg-orange-800  text-gray-100\\">",
  "              Delete my items",
  "            </Button>",
  "          </form>",
  "        </div>",
  "      )}",
  "    </div>",
  "  );",
  "}",
  "",
  "async function List() {",
  "  const data = await prisma.item.findMany({",
  "    include: {",
  "      user: true,",
  "    },",
  "    orderBy: {",
  "      createdAt: \\"desc\\",",
  "    },",
  "  });",
  "",
  "  return (",
  "    <ul className=\\"space-y-4\\" aria-label=\\"items\\">",
  "      {data.map(({ id, content, createdAt, user }) => (",
  "        <li",
  "          key={id}",
  "          className=\\"border border-gray-600 p-4 flex justify-between items-start rounded-md\\"",
  "        >",
  "          <div className=\\"flex justify-center gap-4 items-center\\">",
  "            {user.image && (",
  "              <Image",
  "                alt={user.name ?? \\"no name\\"}",
  "                src={user.image}",
  "                width={56}",
  "                height={56}",
  "                className=\\"rounded-full border-2 border-gray-300\\"",
  "                priority",
  "              />",
  "            )}",
  "            <h2",
  "              className=\\"font-semibold md:text-xl break-all\\"",
  "              title=\\"memo title\\"",
  "            >",
  "              {content}",
  "            </h2>",
  "          </div>",
  "          <span className=\\"text-sm text-gray-300\\">{format(createdAt)}</span>",
  "        </li>",
  "      ))}",
  "    </ul>",
  "  );",
  "}",
  ""
]
`;

exports[`no-sample-code > should update src/app/layout.tsx 1`] = `
[
  "import { clsx } from \\"clsx\\";",
  "import type { Metadata, Viewport } from \\"next\\";",
  "import { Inter } from \\"next/font/google\\";",
  "import type { PropsWithChildren, ReactNode } from \\"react\\";",
  "import { Footer } from \\"./_components/Footer\\";",
  "import { Header } from \\"./_components/Header\\";",
  "import \\"./globals.css\\";",
  "",
  "const inter = Inter({ subsets: [\\"latin\\"] });",
  "",
  "export const metadata: Metadata = {",
  "  metadataBase: new URL(process.env.NEXT_PUBLIC_SITE_URL),",
  "  title: \\"web app template\\",",
  "  description: \\"😸\\",",
  "};",
  "",
  "export const viewport: Viewport = {",
  "  // for mobile",
  "  maximumScale: 1,",
  "};",
  "",
  "type Props = PropsWithChildren<{",
  "  dialog: ReactNode;",
  "}>;",
  "",
  "export default function Layout({ dialog, children }: Props) {",
  "  return (",
  "    <html lang=\\"en\\">",
  "      <body",
  "        className={clsx(",
  "          inter.className,",
  "          \\"bg-gray-700 text-gray-200 min-h-screen flex flex-col\\",",
  "          // for dialog",
  "          \\"has-[dialog[open]]:overflow-hidden\\",",
  "        )}",
  "      >",
  "        <Header />",
  "        <main className=\\"flex-1\\">{children}</main>",
  "        <Footer />",
  "        {dialog}",
  "      </body>",
  "    </html>",
  "  );",
  "}",
  ""
]
`;

exports[`no-sample-code > should update src/middleware.test.ts 1`] = `
[
  "import { beforeEach } from \\"node:test\\";",
  "import type { NextAuthResult } from \\"next-auth\\";",
  "import type { AppRouteHandlerFn } from \\"next/dist/server/route-modules/app-route/module\\";",
  "import {",
  "  getRewrittenUrl,",
  "  isRewrite,",
  "  unstable_doesMiddlewareMatch,",
  "} from \\"next/experimental/testing/server.js\\";",
  "import { NextRequest, type NextResponse } from \\"next/server\\";",
  "import { describe, expect, test, vi } from \\"vitest\\";",
  "import nextConfig from \\"../next.config\\";",
  "import middleware, { config } from \\"./middleware\\";",
  "",
  "type NextAuthRequest = Parameters<Parameters<NextAuthResult[\\"auth\\"]>[0]>[0];",
  "",
  "describe(\\"middleware\\", () => {",
  "  beforeEach(() => {",
  "    vi.mock(\\"next-auth\\", async (actual) => ({",
  "      ...(await actual<typeof import(\\"next-auth\\")>()),",
  "      default: () => ({",
  "        auth: (",
  "          fn: (",
  "            req: NextAuthRequest,",
  "            ctx: AppRouteHandlerFn,",
  "          ) => Promise<NextResponse>,",
  "        ) => fn,",
  "      }),",
  "    }));",
  "  });",
  "",
  "  test(\\"should execute middleware when paths are specified by config\\", () => {",
  "    const fixtures: [string, boolean][] = [",
  "      [\\"/\\", false],",
  "      [\\"/me\\", true],",
  "    ];",
  "",
  "    for (const [url, expected] of fixtures) {",
  "      expect(",
  "        unstable_doesMiddlewareMatch({",
  "          config,",
  "          nextConfig,",
  "          url,",
  "        }),",
  "      ).toEqual(expected);",
  "    }",
  "  });",
  "",
  "  test(\\"should route /signin to when fallback\\", async () => {",
  "    const req = new NextRequest(\\"http://localhost:3000\\");",
  "    const res = (await middleware(req, {})) as NextResponse;",
  "",
  "    expect(isRewrite(res)).toEqual(true);",
  "    expect(getRewrittenUrl(res)).toEqual(\\"http://localhost:3000/signin\\");",
  "  });",
  "",
  "  test(\\"should accept only users having role of user\\", async () => {",
  "    const req = {",
  "      auth: {",
  "        user: {",
  "          role: \\"USER\\",",
  "        },",
  "        expires: \\"expires\\",",
  "      },",
  "    } as NextAuthRequest;",
  "",
  "    const res = (await middleware(req, {})) as NextResponse;",
  "",
  "    expect(isRewrite(res)).toEqual(false);",
  "    expect(getRewrittenUrl(res)).toEqual(null);",
  "  });",
  "});",
  ""
]
`;

exports[`no-sample-code > should update src/middleware.ts 1`] = `
[
  "import NextAuth from \\"next-auth\\";",
  "import { NextResponse } from \\"next/server\\";",
  "import { config as authConfig } from \\"./app/_clients/nextAuthConfig\\";",
  "",
  "const { auth } = NextAuth(authConfig);",
  "",
  "export const config = { matcher: [\\"/me(.*)\\"] };",
  "",
  "export default auth(async function middleware(req) {",
  "  if (req.auth?.user.role === \\"USER\\") {",
  "    return NextResponse.next();",
  "  }",
  "",
  "  return NextResponse.rewrite(new URL(\\"/signin\\", req.url));",
  "});",
  ""
]
`;
